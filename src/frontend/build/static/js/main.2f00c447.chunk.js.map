{"version":3,"sources":["api/user.js","utils/mockApiHelper.js","pages/Login.js","layout/Style.js","utils/helpers.js","data.js","components/Dialog.js","components/Table.js","components/Chart.js","components/StatTable.js","components/OutputPage.js","components/InputPage.js","components/Main.js","pages/Dashboard.js","reportWebVitals.js","layout/Header.js","layout/index.js","index.js"],"names":["id","email","password","authToken","logout","localStorage","removeItem","getCurrentUserInformation","JSON","parse","getItem","saveUserInformation","userInformation","setItem","stringify","userId","useStyles","makeStyles","theme","container","padding","spacing","LoginPage","onLoginSuccess","classes","useState","setEmail","setPassword","Container","className","maxWidth","Grid","item","xs","TextField","fullWidth","label","name","size","variant","value","onChange","e","target","type","Button","color","onClick","currentUser","userData","find","getAuthToken","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","formControl","margin","minWidth","selectEmpty","marginTop","control","sortSaleData","saleData","sortByKey","sort","saleDataA","saleDataB","dateA","Date","dateB","isBefore","Number","getMostRevenueEarningProduct","maximumRevenueEarningProduct","revenue","revenuePerProduct","forEach","hasOwnProperty","product","sales_number","getMostSoldProduct","mostSoldProduct","count","sellCountPerProduct","getAverageSale","reduce","curr","length","getAggregatedData","currentUserId","salesData","getSalesData","currentUserSalesData","filter","avgSaleCurrentUser","avgSale","mostExpensiveProduct","prev","index","prevItemPricePerUnit","currItemPricePerUnit","mostRevenueEarningProduct","saveSalesData","salesDataStr","countries","cities","Russia","UK","Ukrain","genders","chartFilters","sortKeys","AlertDialog","props","Dialog","open","openDialog","onClose","handleCloseDialog","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","handleAccept","autoFocus","Output","data","undefined","style","rows","columns","field","headerName","pageSize","checkboxSelection","Chart","state","labels","map","row","datasets","yAxisLabel","backgroundColor","borderColor","borderWidth","console","log","options","text","fontSize","legend","StatTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","currentUserName","OutputPage","onLogout","rowData","handleReset","age","gender","city","country","csvData","setcsvData","chartFilter","setChartFilter","orderBy","setOrderBy","useEffect","textAlign","Typography","fontWeight","lg","FormControl","InputLabel","Select","labelId","event","MenuItem","InputPage","setShowoutput","React","setName","setAge","setGender","setCity","setCountry","file","setFile","rawData","setRawData","cityList","setCityList","setOpenDialog","hasError","setHasError","btnEnabeled","updateData","csv","Papa","unparse","handleCSVUpload","complete","toast","error","onShowOutPut","shift","processedData","push","date","preProcessData","helperText","FormHelperText","Array","elementInArray","userInformationObject","success","files","accept","float","disabled","multiline","rowsMax","InputLabelProps","shrink","Main","showOutput","Dashboard","token","setToken","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","AppBar","clsx","Toolbar","noWrap","Layout","CssBaseline","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f00c447.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    email: \"sabbir@alam.com\",\n    password: \"123456\",\n    authToken: \"testAuthToken\",\n  },\n  {\n    id: 2,\n    email: \"shabnam@mushrit.com\",\n    password: \"123456\",\n    authToken: \"testAuthToken\",\n  },\n  {\n    id: 3,\n    email: \"sakib@alam.com\",\n    password: \"123456\",\n    authToken: \"testAuthToken\",\n  },\n  {\n    id: 4,\n    email: \"akter@saima.com\",\n    password: \"123456\",\n    authToken: \"testAuthToken\",\n  },\n];\n","import userData from \"../api/user\";\n\nexport const getAuthToken = (email, password) => {\n  const currentUser = userData.find(\n    (item) => item.email === email && item.password === password\n  );\n  if (currentUser?.authToken) {\n    localStorage.setItem(\"authToken\", currentUser.authToken);\n    localStorage.setItem(\"currentUserId\", currentUser.id);\n    return currentUser.authToken;\n  }\n  return null;\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"authToken\");\n  localStorage.removeItem(\"currentUserId\");\n  localStorage.removeItem(\"currentUserInformation\");\n};\n\nexport const getCurrentUserInformation = () => {\n  return JSON.parse(localStorage.getItem(\"currentUserInformation\"));\n};\n\nexport const saveUserInformation = (userInformation) => {\n  return localStorage.setItem(\n    \"currentUserInformation\",\n    JSON.stringify({\n      ...userInformation,\n      userId: localStorage.getItem(\"currentUserId\"),\n    })\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getAuthToken } from '../utils/mockApiHelper';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LoginPage = ({ onLoginSuccess }) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const onSubmitForm = () => {\n    const authToken = getAuthToken(email, password);\n    if (authToken) {\n      onLoginSuccess(authToken);\n    }\n  };\n  return (\n    <Container className={classes.container} maxWidth=\"xs\">\n      <form>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Email\"\n                  name=\"email\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  name=\"password\"\n                  size=\"small\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"secondary\"\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={onSubmitForm}\n            >\n              Log in\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import { makeStyles } from '@material-ui/core/styles'\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\ttoolbar: {\n\t\tpaddingRight: 24, // keep right padding when drawer closed\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: '0 8px',\n\t\t...theme.mixins.toolbar,\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t},\n\tmenuButtonHidden: {\n\t\tdisplay: 'none',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: theme.spacing(9),\n\t\t},\n\t},\n\tappBarSpacer: theme.mixins.toolbar,\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto',\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingBottom: theme.spacing(4),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column',\n\t},\n\tfixedHeight: {\n\t\theight: 240,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t\twidth: '100%',\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n\tcontrol: {\n\t\tpadding: theme.spacing(2),\n\t},\n}))\n\nexport default useStyles\n","import { isBefore } from \"date-fns\";\n\n/**\n * Preprocessing the csv data to add key attribute for each item in each row of the sales data.\n * @param {[]} productData\n */\nexport const preProcessData = (salesData) => {\n  const processedData = [];\n  salesData.forEach((row, index) => {\n    if (row[0]) {\n      processedData.push({\n        id: index,\n        date: row[0],\n        product: row[1],\n        sales_number: row[2],\n        revenue: row[3],\n        userId: row[4],\n      });\n    }\n  });\n  return processedData;\n};\n\n/**\n * Sort sales data by user defined sort key.\n * @param {[]} saleData\n * @param {string} sortByKey\n */\nexport const sortSaleData = (saleData, sortByKey) => {\n  const sortedData = saleData.sort((saleDataA, saleDataB) => {\n    if (sortByKey === \"product\") {\n      // Sort by product name lexicographically\n      if (saleDataA[sortByKey] > saleDataB[sortByKey]) return 1;\n      else if (saleDataA[sortByKey] < saleDataB[sortByKey]) return -1;\n      return 0;\n    } else if (sortByKey === \"date\") {\n      // Sort by date ascending order\n      const dateA = new Date(saleDataA[sortByKey]);\n      const dateB = new Date(saleDataB[sortByKey]);\n\n      if (isBefore(dateA, dateB)) return -1;\n      else if (!isBefore(dateA, dateB)) return 1;\n      return 0;\n    }\n    return Number(saleDataA[sortByKey]) - Number(saleDataB[sortByKey]);\n  });\n\n  return sortedData;\n};\n\n/**\n * Find the most revenue earning product.\n * @param {[]} saleData\n */\nexport const getMostRevenueEarningProduct = (saleData) => {\n  let maximumRevenueEarningProduct = {\n    name: \"\",\n    revenue: 0,\n  };\n  let revenuePerProduct = {};\n  saleData.forEach((item) => {\n    if (!revenuePerProduct.hasOwnProperty(item.product)) {\n      revenuePerProduct[item.product] = 0;\n    }\n    revenuePerProduct[item.product] +=\n      Number(item.revenue) * Number(item.sales_number);\n    if (\n      revenuePerProduct[item.product] > maximumRevenueEarningProduct.revenue\n    ) {\n      maximumRevenueEarningProduct.name = item.product;\n      maximumRevenueEarningProduct.revenue = revenuePerProduct[item.product];\n    }\n  });\n\n  return maximumRevenueEarningProduct;\n};\n\nexport const getMostSoldProduct = (saleData) => {\n  let mostSoldProduct = {\n    name: \"\",\n    count: 1,\n  };\n\n  let sellCountPerProduct = {};\n  saleData.forEach((item) => {\n    if (!sellCountPerProduct.hasOwnProperty(item.product)) {\n      sellCountPerProduct[item.product] = 0;\n    }\n    sellCountPerProduct[item.product] += Number(item.sales_number);\n    if (sellCountPerProduct[item.product] > mostSoldProduct.count) {\n      mostSoldProduct.name = item.product;\n      mostSoldProduct.count = sellCountPerProduct[item.product];\n    }\n  });\n  return mostSoldProduct;\n};\n\nexport const getAverageSale = (saleData) => {\n  const totalRevenue = saleData.reduce(\n    (revenue, curr) => (revenue += Number(curr.revenue)),\n    0\n  );\n  return totalRevenue / saleData.length;\n};\n\nexport const getMostExpensiveProduct = (saleData) => {\n  return saleData.reduce((prev, curr, index) => {\n    const prevItemPricePerUnit =\n      Number(prev.revenue) / Number(prev.sales_number);\n    const currItemPricePerUnit =\n      Number(curr.revenue) / Number(curr.sales_number);\n    if (index === 0 || prevItemPricePerUnit < currItemPricePerUnit) {\n      prev = curr;\n    }\n    return prev;\n  }, {});\n};\n\nexport const getAggregatedData = () => {\n    const currentUserId = localStorage.getItem('currentUserId');\n  const salesData = getSalesData();\n  const currentUserSalesData = salesData.filter(\n    (item) => item.userId === currentUserId\n  );\n  return {\n    avgSaleCurrentUser: getAverageSale(currentUserSalesData),\n    avgSale: getAverageSale(salesData),\n    mostExpensiveProduct: getMostExpensiveProduct(currentUserSalesData),\n    mostRevenueEarningProduct: getMostRevenueEarningProduct(\n      currentUserSalesData\n    ),\n    mostSoldProduct: getMostSoldProduct(currentUserSalesData),\n  };\n};\n\nexport const saveSalesData = (salesData) => {\n  localStorage.setItem(\"salesData\", JSON.stringify(salesData));\n};\n\nexport const getSalesData = () => {\n  const salesDataStr = localStorage.getItem(\"salesData\");\n  if (salesDataStr) {\n    return JSON.parse(salesDataStr);\n  }\n  return [];\n};\n","export const countries = ['Russia', 'UK', 'Ukrain']\n\nexport const cities = {\n\tRussia: [\n\t\t'Novosibirsk',\n\t\t'Nizhny Novgorod',\n\t\t'Samara',\n\t\t'Omsk',\n\t\t'Kazan',\n\t\t'Ufa',\n\t\t'Chelyabinsk',\n\t],\n\tUK: ['LONDON', 'Birmingham', 'Leeds', 'Glasgow', 'Sheffield', ''],\n\tUkrain: [\n\t\t'Mykolaiv',\n\t\t'Kryvy Rig\t',\n\t\t'Zaporozhye',\n\t\t'Odessa',\n\t\t'Donetsk',\n\t\t'Dnepropetrovsk',\n\t\t'Kharkov',\n\t\t'KIEV',\n\t],\n}\n\nexport const genders = ['Male', 'Female', 'Unspecified']\n\nexport const chartFilters = ['sales_number', 'revenue']; \n\nexport const sortKeys = ['date', 'product', 'sales_number', 'revenue'];\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\n\nexport default function AlertDialog(props) {\n\treturn (\n\t\t<div>\n\t\t\t<Dialog\n\t\t\t\topen={props.openDialog}\n\t\t\t\tonClose={props.handleCloseDialog}\n\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText id='alert-dialog-description'>\n\t\t\t\t\t\tAre you sure you want to replace the data\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={props.handleCloseDialog} color='primary'>\n\t\t\t\t\t\tNo\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={props.handleAccept} color='primary' autoFocus>\n\t\t\t\t\t\tYes\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\n\nexport default function Output(props) {\n\tconst data = props.data\n\n\tif (!data || data === undefined) {\n\t\treturn null\n\t}\n\n\tconst columns = [\n\t\t{ field: 'date', headerName: 'Date'},\n\t\t{ field: 'product', headerName: 'Product'},\n\t\t{ field: 'sales_number', headerName: 'Sales Number'},\n\t\t{ field: 'revenue', headerName: 'Revenue'},\n\t];\n\n\treturn (\n\t\t<div style={{ height: 400, width: '100%' }}>\n\t\t\t<DataGrid rows={data} columns={columns} pageSize={5} checkboxSelection />\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nconst Chart = (props) => {\n\tconst data = props.data\n\n\tif (!data || data === undefined) {\n\t\treturn null\n\t}\n\n\tconst labels = data.map((row) => row['product']);\n\n\tconst state = {\n\t\tlabels: labels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: props.yAxisLabel,\n\t\t\t\tbackgroundColor: '#0000FF',\n\t\t\t\tborderColor: 'rgba(0,0,0,1)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tdata: data.map((row) =>  {\n\t\t\t\t\tconsole.log(row)\n\t\t\t\t\treturn row[props.yAxisLabel];\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Bar\n\t\t\t\tdata={state}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: `${props.yAxisLabel} per product`,\n\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Chart\n","import React from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableRow,\n  TableContainer,\n  TableHead,\n  TableBody,\n  Paper,\n} from \"@material-ui/core\";\n\nconst StatTable = (props) => {\n  const data = props.data;\n\n  if (!data || data === undefined) {\n    return null;\n  }\n\n  console.log(data);\n\n  const columns = [\n    { field: \"avgSaleCurrentUser\", headerName: \"\" },\n    { field: \"avgSale\", headerName: \"\" },\n    { field: \"\", headerName: \"\" },\n    {\n      field: \"mostRevenueEarningProduct\",\n      headerName: \"\",\n    },\n    { field: \"mostSoldProduct\", headerName: \"\" },\n  ];\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <TableContainer component={Paper}>\n        <Table style={{ minWidth: 700 }} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Average Sales()</TableCell>\n              <TableCell align=\"center\">Avg Sales(All)</TableCell>\n              <TableCell align=\"center\">Most Expensive Product</TableCell>\n              <TableCell align=\"center\">Most Revenue Earning product</TableCell>\n              <TableCell align=\"center\">Most Sold product</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Table component={Paper}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>UserName</TableCell>\n                      <TableCell>Average</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>{props.currentUserName}</TableCell>\n                      <TableCell>{data.avgSaleCurrentUser}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableCell>\n              <TableCell>\n                <Table component={Paper}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Average</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>{data.avgSale}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableCell>\n              <TableCell>\n                <Table component={Paper}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Product Name</TableCell>\n                      <TableCell>Revenue</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>{data.mostExpensiveProduct.product}</TableCell>\n                      <TableCell>{Number(data.mostExpensiveProduct.revenue) / Number(data.mostExpensiveProduct.sales_number)}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableCell>\n              <TableCell>\n                <Table component={Paper}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Product Name</TableCell>\n                      <TableCell>Total Revenue</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>{data.mostRevenueEarningProduct.name}</TableCell>\n                      <TableCell>{data.mostRevenueEarningProduct.revenue}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableCell>\n              <TableCell>\n                <Table component={Paper}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Product Name</TableCell>\n                      <TableCell>Total Sales</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>{data.mostSoldProduct.name}</TableCell>\n                      <TableCell>{data.mostSoldProduct.count}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default StatTable;\n","import React, { useEffect, useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"../layout/Style\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { logout } from \"../utils/mockApiHelper\";\nimport { getAggregatedData, sortSaleData } from \"../utils/helpers\";\nimport Table from \"./Table\";\nimport Chart from \"./Chart\";\nimport StatTable from \"./StatTable\";\nimport { chartFilters, sortKeys } from \"../data\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst OutputPage = ({ onLogout, userInformation, rowData, handleReset }) => {\n  const { name, email, age, gender, city, country } = userInformation;\n  const classes = useStyles();\n\n  const [csvData, setcsvData] = useState([...rowData]);\n  const [chartFilter, setChartFilter] = useState(chartFilters[0]);\n  const [orderBy, setOrderBy] = useState(sortKeys[0]);\n\n  useEffect(() => {\n      if(rowData?.length) {\n          setcsvData([...rowData])\n      }\n  }, [rowData]);\n\n  useEffect(() => {\n    if (csvData && csvData.length) {\n      const rows = sortSaleData(csvData, orderBy);\n      setcsvData([...rows]);\n    }\n  }, [orderBy]);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: \"right\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={() => {\n              logout();\n              onLogout(localStorage.getItem(\"authToken\"));\n            }}\n          >\n            Logout\n          </Button>\n        </Grid>\n      </Grid>\n      <Typography variant=\"h6\">Personal Information</Typography>\n      <Grid container spacing={8}>\n        <Grid item xs={6}>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>Name :</p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{name}</p>\n            </Grid>\n          </Grid>\n          <hr />\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>Age :</p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{age}</p>\n            </Grid>\n          </Grid>\n          <hr />\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>\n                Gender :\n              </p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{gender}</p>\n            </Grid>\n          </Grid>\n          <hr />\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={4}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>Email :</p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{email}</p>\n            </Grid>\n          </Grid>\n          <hr />\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>\n                Country :\n              </p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{country}</p>\n            </Grid>\n          </Grid>\n          <hr />\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"left\", fontWeight: \"bolder\" }}>City :</p>\n            </Grid>\n            <Grid item xs={6}>\n              <p style={{ textAlign: \"right\" }}>{city}</p>\n            </Grid>\n          </Grid>\n          <hr />\n        </Grid>\n      </Grid>\n      <Grid container spacing={8}>\n        <Grid item xs={6}>\n          <Grid container xs={12}>\n            <Grid item lg={9}>\n              <Typography variant=\"h6\">Data</Typography>\n            </Grid>\n            <Grid item lg={3}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  OrderBy\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={orderBy}\n                  onChange={(event) => {\n                    setOrderBy(event.target.value);\n                  }}\n                  label=\"OrderBy\"\n                >\n                  {sortKeys.map((item, index) => (\n                    <MenuItem value={item} key={index}>\n                      {item}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Table data={csvData} />\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container xs={12}>\n            <Grid item lg={9}>\n              <Typography variant=\"h6\">Chart</Typography>\n            </Grid>\n            <Grid item lg={3}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Y-Axis\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={chartFilter}\n                  onChange={(event) => {\n                    setChartFilter(event.target.value);\n                  }}\n                  label=\"YAxis\"\n                >\n                  {chartFilters.map((item, index) => (\n                    <MenuItem value={item} key={index}>\n                      {item}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Chart data={csvData} yAxisLabel={chartFilter} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={8}>\n        <Grid item lg={12}>\n          <Typography variant=\"h6\">Statistics Table</Typography>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container>\n            <StatTable data={getAggregatedData()} currentUserName={name} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={handleReset}\n          >\n            Reset\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default OutputPage;\n","import React, { useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"../layout/Style\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { logout } from \"../utils/mockApiHelper\";\nimport {\n  preProcessData,\n  sortSaleData,\n  getAggregatedData,\n  saveSalesData,\n  getSalesData,\n} from \"../utils/helpers\";\nimport { countries, cities, genders, sortKeys } from \"../data\";\nimport Papa from \"papaparse\";\nimport {\n  getCurrentUserInformation,\n  saveUserInformation,\n} from \"../utils/mockApiHelper\";\nimport Dialog from \"./Dialog\";\nimport OutputPage from \"./OutputPage\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst InputPage = ({ onLogout, setShowoutput, setcsvData }) => {\n  const classes = useStyles();\n  const [name, setName] = React.useState();\n  const [email, setEmail] = React.useState(\"\");\n  const [age, setAge] = React.useState(\"\");\n  const [gender, setGender] = React.useState(\"\");\n  const [city, setCity] = React.useState(\"\");\n  const [country, setCountry] = React.useState(\"\");\n  const [file, setFile] = React.useState();\n  const [rawData, setRawData] = React.useState();\n  const [cityList, setCityList] = React.useState([]);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n\n  useEffect(() => {\n    const userInformation = getCurrentUserInformation();\n    if (userInformation?.name) {\n      setName(userInformation.name);\n      setAge(userInformation.age);\n      setEmail(userInformation.email);\n      setGender(userInformation.gender);\n      setCountry(userInformation.country);\n      setCity(userInformation.city);\n      setCityList(cities[userInformation.country]);\n    }\n  }, []);\n\n  const btnEnabeled =\n    !!name &&\n    !!email &&\n    !!age &&\n    !!gender &&\n    !!city &&\n    !!country &&\n    (!!file || !!rawData);\n\n  const handleReset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setAge(\"\");\n    setGender(\"\");\n    setCity(\"\");\n    setCountry(\"\");\n    setFile();\n    setShowoutput(false);\n    setcsvData(\"\");\n    setRawData(\"\");\n    setHasError(false);\n    saveUserInformation({});\n    saveSalesData([]);\n  };\n\n  const onUpdateUserInformation = () => {\n    const canUpdateInformation = name && email && gender && country && city;\n    if (!canUpdateInformation) {\n      toast.error(\"Please fill up the missing user informations!!!\");\n      setHasError(true);\n      return;\n    }\n\n    const userInformationObject = {\n      email,\n      name,\n      gender,\n      age,\n      country,\n      city,\n    };\n    setHasError(false);\n    saveUserInformation(userInformationObject);\n    toast.success(\"Successfully updated user information\");\n  };\n\n  /**\n   * Converts the parsed array data from csv file to csv string, and display set rawData prop to display\n   * it in Manual CSV Data input field\n   *\n   * @param {array} data - parsed array of objects from csv file\n   */\n  const updateData = (data) => {\n    const csv = Papa.unparse(data.data);\n    setRawData(csv);\n  };\n\n  /**\n   * Checks if data is already available in Manual CSV Data input field\n   * if available, then open confirmation dialog and ask user for confirmation to replace data\n   * If not available, then call handleCSVUpload to prepare data for chart and table\n   */\n  const confirmUpload = () => {\n    if (!!rawData) {\n      setOpenDialog(true);\n    } else {\n      handleCSVUpload();\n    }\n  };\n\n  /**\n   * Validate the uploaded file type, if it's not in text/csv format, then display error\n   * If file is valid, parse the file and execute callback function\n   */\n  const handleCSVUpload = () => {\n    if (!!file && file.type === \"text/csv\") {\n      Papa.parse(file, {\n        complete: updateData,\n      });\n    } else {\n      toast.error(\"Please upload valid csv file\");\n    }\n    setOpenDialog(false);\n  };\n\n  /**\n   * This function actully parse the final data used to show table and charts in output screen\n   * Check if rawData (comma seprated string) exists, if yes then convert it to array and call showOutPut function\n   */\n  const handleSubmit = () => {\n    if (!!rawData) {\n      Papa.parse(rawData, {\n        complete: onShowOutPut,\n      });\n    }\n  };\n\n  /**\n   * Set csvData prop and shows the ocountriesutput page\n   */\n  const onShowOutPut = (data) => {\n    data.data.shift();\n    const rows = sortSaleData(preProcessData(data.data), sortKeys[0]);\n    saveSalesData(rows); // saving sales data in local storage\n    setShowoutput(true);\n  };\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: \"right\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={() => {\n              logout();\n              onLogout(localStorage.getItem(\"authToken\"));\n            }}\n          >\n            Logout\n          </Button>\n        </Grid>\n      </Grid>\n      <Typography variant=\"h6\">User</Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            error={hasError && !name}\n            helperText={!name && hasError ? \"Name can not be empty\" : \"\"}\n            id=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth={true}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n            value={name}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Gender\n            </InputLabel>\n            <Select\n              error={hasError && !gender}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={gender}\n              onChange={(event) => {\n                setGender(event.target.value);\n              }}\n              label=\"Gender\"\n            >\n              {genders.map((item, index) => (\n                <MenuItem value={item} key={index}>\n                  {item}\n                </MenuItem>\n              ))}\n            </Select>\n            {!gender && hasError && (\n              <FormHelperText error>Gender can not be empty</FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        <Grid item xs={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel>\n            <Select\n              error={hasError && !age}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={age}\n              onChange={(event) => {\n                setAge(event.target.value);\n              }}\n              label=\"Age\"\n            >\n              {[...Array(121)].map((elementInArray, index) => (\n                <MenuItem value={index} key={index}>\n                  {index}\n                </MenuItem>\n              ))}\n            </Select>\n            {!age && hasError && (\n              <FormHelperText error>Age can not be empty</FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={hasError && !email}\n            helperText={!email && hasError ? \"Email can not be empty\" : \"\"}\n            id=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            fullWidth={true}\n            value={email}\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Country\n            </InputLabel>\n            <Select\n              error={hasError && !country}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={country}\n              onChange={(event) => {\n                setCountry(event.target.value);\n                setCity(\"\");\n                setCityList(cities[event.target.value]);\n              }}\n              label=\"Country\"\n            >\n              {countries.map((item) => (\n                <MenuItem value={item} key={item}>\n                  {item}\n                </MenuItem>\n              ))}\n            </Select>\n            {!country && hasError && (\n              <FormHelperText error>Country can not be empty</FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        <Grid item xs={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel>\n            <Select\n              error={hasError && !city}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={city}\n              onChange={(event) => {\n                setCity(event.target.value);\n              }}\n              label=\"City\"\n            >\n              {cityList.map((item) => (\n                <MenuItem value={item}>{item}</MenuItem>\n              ))}\n            </Select>\n            {!city && hasError && (\n              <FormHelperText error>City can not be empty</FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: \"left\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={onUpdateUserInformation}\n          >\n            Update User Data\n          </Button>\n        </Grid>\n      </Grid>\n      <br />\n      <Typography variant=\"h6\">Input Data</Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={10}>\n          <TextField\n            id=\"name\"\n            variant=\"outlined\"\n            type=\"file\"\n            fullWidth={true}\n            onChange={(event) => {\n              setFile(event.target.files[0]);\n            }}\n            accept=\"csv\"\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            className={classes.margin}\n            style={{\n              float: \"right\",\n              height: 55,\n              width: \"100%\",\n            }}\n            onClick={confirmUpload}\n            disabled={!file}\n          >\n            Upload File\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Manual CSV Data Input\"\n            multiline\n            rows={10}\n            variant=\"outlined\"\n            rowsMax={10}\n            fullWidth={true}\n            onChange={(event) => {\n              setRawData(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={rawData}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            className={classes.margin}\n            disabled={!btnEnabeled}\n            style={{ marginRight: 20 }}\n            onClick={handleSubmit}\n          >\n            Upload\n          </Button>\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={handleReset}\n          >\n            Reset\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog\n        openDialog={openDialog}\n        handleCloseDialog={() => {\n          setOpenDialog(false);\n        }}\n        handleAccept={handleCSVUpload}\n      />\n      <ToastContainer />\n    </>\n  );\n};\nexport default InputPage;\n","import React, { useEffect, useState } from \"react\";\nimport { getSalesData, saveSalesData } from \"../utils/helpers\";\nimport { getCurrentUserInformation, saveUserInformation } from \"../utils/mockApiHelper\";\nimport InputPage from \"./InputPage\";\nimport OutputPage from \"./OutputPage\";\n\nconst Main = ({ onLogout }) => {\n  const [showOutput, setShowoutput] = useState(false);\n  const [csvData, setcsvData] = useState([]);\n\n  useEffect(() => {\n    const userInformation = getCurrentUserInformation();\n    const salesData = getSalesData();\n\n    if (userInformation?.name && salesData?.length) {\n      setShowoutput(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    const userInformation = getCurrentUserInformation();\n    const salesData = getSalesData();\n    if (salesData && showOutput) {\n      const rows = salesData.filter(\n        (item) => item.userId === userInformation?.userId\n      );\n      setcsvData([...rows]);\n    }\n  }, [showOutput]);\n\n  const handleReset = () => {\n    setShowoutput(false);\n    setcsvData([]);\n    saveUserInformation({});\n    saveSalesData([]);\n  };\n\n  return (\n    <>\n      {!showOutput && (\n        <InputPage\n          onLogout={onLogout}\n          setcsvData={setcsvData}\n          setShowoutput={setShowoutput}\n        />\n      )}\n      {!!showOutput && (\n        <OutputPage\n          handleReset={handleReset}\n          onLogout={onLogout}\n          userInformation={getCurrentUserInformation()}\n          rowData={[...csvData]}\n        />\n      )}\n    </>\n  );\n};\nexport default Main;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Login from './Login';\nimport useStyles from \"../layout/Style\";\nimport Main from \"../components/Main\";\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n\n  if (!token) {\n    return <Login onLoginSuccess={setToken} />;\n  }\n  return (\n    <Paper className={classes.control}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Main onLogout={setToken} />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Dashboard;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport clsx from 'clsx'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport useStyles from './Style'\n\nconst Header = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar\n\t\t\tposition='absolute'\n\t\t\tclassName={clsx(classes.appBar)}\n\t\t>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent='h1'\n\t\t\t\t\tvariant='h6'\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t\tnoWrap\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t>\n\t\t\t\t\tReact Web App\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport useStyles from './Style'\nimport Header from './Header'\n\nconst Layout = (props) => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<Header />\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t<Container maxWidth='lg' className={classes.container}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default Layout\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from '../src/pages/Dashboard'\nimport reportWebVitals from './reportWebVitals'\nimport Layout from './layout/index'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Layout>\n\t\t\t<App />\n\t\t</Layout>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}